THIS README IS NOT FINISHED YET

***************************************************************************************************************************************
OVERVIEW
--------

Milestone 1 is a program that uses the MSP430F5529 development board to receive, process, and transmit data via USB-pin or pin-to-pin.
This data is used to light up an RGB LED external to the development board at a specific color combination and brightness.
Additional data received (if any) can be transmitted via pin to another MSP430 device.
This functionality is based on how the fictional character, Will Byers from STRANGER THINGS, communicated with his mother while using
string lights.

[Previews next sections: General Design, Initializations, Software PWM interrupts, UART interrupts, external circuitry]

Specifications, General Design (global variables, functions, interrupts), Initializations, Software PWM interrupts, UART interrupts,
external circuitry

***************************************************************************************************************************************
SPECIFICATIONS
--------------

In order to execute this program:
- certain pins on each processor are routed to LEDs on the development board
- these pins are configured and initialized as GPIO--LEDs as outputs
- an interupt must be enabled on the positive edge of the button press
- timer A capture control must be set to capture compare interrupt enable (CCIE)
- timer A control configured using the Secondary Master Clock in continuous mode with an internal divider of 8
- timer A capture control register 0 must be set to a value to count to 10,000 (decimal)
- at the end of initialization, the processor must go into low-power mode
- outside the main function, an interrupt vector must be declared, which toggles the LED
 _______________________________________________________________________________________________
| Byte no. |                  Contents                  |                Example                |
|----------|--------------------------------------------|---------------------------------------|
|    0     | Number of bytes (N) not including this bit |            0x06 (6 bytes)             |
| 1 to N-1 |          RGB Colors for each node          | 0xFF (red), 0x00 (green), 0x7F (blue) |
|__________|____________________________________________|_______________________________________|

***************************************************************************************************************************************
GENERAL DESIGN
--------------

In order to execute this program:
- certain pins on each processor are routed to LEDs on the development board
- these pins are configured and initialized as GPIO--LEDs as outputs
- an interupt must be enabled on the positive edge of the button press
- timer A capture control must be set to capture compare interrupt enable (CCIE)
- timer A control configured using the Secondary Master Clock in continuous mode with an internal divider of 8
- timer A capture control register 0 must be set to a value to count to 10,000 (decimal)
- at the end of initialization, the processor must go into low-power mode
- outside the main function, an interrupt vector must be declared, which toggles the LED

Global Variables
- i     : unsigned char : tracks how many bytes left to process for USB-to-pin UART interaction
- j     : unsigned char : tracks how many bytes left to process for pin-to-pin UART interaction
- state : unsigned char : tracks how to process each byte, whether to read package size, RGB intensity, or to pass along the byte

Setup Functions
- void externalRGBLEDsetup() : configures the MSP430F5529 pins to interface with RGB LEDs external to the development board
- void timerA0Setup()        : configures the pins to interface with the timer A0 peripheral to implement the software-PWM
- void UARTsetup()           : sets up the UART interface

Interrupt Functions
- void TIMER0_A0()        : interrupt service routine for Timer A0 CCR0 : turns the LEDs ON during the PWM-cycle
- void TIMER0_A1_VECTOR() : interrupt service routine for Timer A0 CCR1 : turns the LEDs OFF during the PWM-cycle
- void USCI_A1_VECTOR()   : USB-to-pin UART interrupt service routine   : determines how to process data received via USB
- void USCI_A0_VECTOR()   : pin-to-pin UART interrupt service routine   : determines how to process data received via pin

***************************************************************************************************************************************
INITIALIZATIONS
---------------

externalRGBLEDsetup()
- stuff

timerA0Setup()
- stuff

UARTsetup()
- stuff

- P1.0 is the pin routed to the LED (D1)
- Bit 0 of P1SEL, P1DIR, and P1OUT are initialized accordingly
- TACCL0 is set to CCIE, enabling an interrupt when the value in TA0R equals the value stored in TACCR0
- after initialization, the processor goes to into low-power mode with the following code: _BIS_SR(LPM0_bits + GIE);
- outside the main function, an interrupt vector is defined with the following code: #pragma vector=TIMER0_A0_VECTOR
- an interrupt function, which toggles P1.0 (D1) is defined with the following code: __interrupt void TIMER0_A0(void)

***************************************************************************************************************************************
SOFTWARE-PWM INTERRUPTS
-----------------------

Blurb

TIMER0_A0
- stuff

TIMER0_A1
- stuff


- the follwing code must be added to disable GPIO power-on default Hi-Z mode to use the ports: PM5CTL0 &= ~LOCKLPM5;
- P1.0 is the pin routed to the LED (LED1)
- Bit 0 of P1SEL, P1DIR, and P1OUT are initialized accordingly
- TBCCL0 is set to CCIE, enabling an interrupt when the value in TB0R equals the value stored in TBCCR0
- after initialization, the processor goes to into low-power mode with the following code: _BIS_SR(LPM1_bits + GIE);
- outside the main function, an interrupt vector is defined with the following code: #pragma vector=TIMER0_B0_VECTOR
- an interrupt function, which toggles P1.0 (KED1) is defined with the following code: __interrupt void TIMER0_B0(void)

***************************************************************************************************************************************
UART INTERRUPTS
---------------

Blurb

USCI_A1_interrupt
- stuff

USCI_A0_interrupt
- stuff

- the follwing code must be added to disable GPIO power-on default Hi-Z mode to use the ports: PM5CTL0 &= ~LOCKLPM5;
- P1.0 is the pin routed to the LED (LED1)
- Bit 0 of P1SEL, P1DIR, and P1OUT are initialized accordingly
- TBCCL0 is set to CCIE, enabling an interrupt when the value in TB0R equals the value stored in TBCCR0
- after initialization, the processor goes to into low-power mode with the following code: _BIS_SR(LPM1_bits + GIE);
- outside the main function, an interrupt vector is defined with the following code: #pragma vector=TIMER0_B0_VECTOR
- an interrupt function, which toggles P1.0 (KED1) is defined with the following code: __interrupt void TIMER0_B0(void)

***************************************************************************************************************************************
EXTERNAL CIRCUITRY
------------------

   MSP430F5529 Pinout for Pins Used                List of Parts for 
 _____________________________________             _______________________________________________
| Pin No. | Port | Description        |           | Label   |   PN    | Description | Connections |
|---------|------|--------------------|           |---------|---------|-------------|
| 1       | NA   | Vcc                |           |   R1    |    -    |   300 Ohm   |        
| 2       | P1.0 | Feeds to Green LED |           |   R2    |    -    |   195 Ohm   |
| 14      | P1.6 | Feeds to Red LED   |           |   R3    |    -    |   150 Ohm   |
| 16      | ~RST | Feeds to Button    |           |  R4-6   |    -    |   100 kOhm  |
| 20      | NA   | Vss                |           |   Q1    | 2N7000  |   N-MOS     |
|_________|______|____________________|           |   Q2    | 2N7000  |   N-MOS     |
                                                  |   Q3    | 2N7000  |   N-MOS     |
                                                  | RGBLED  |    -    |   N-MOS     |
                                                  |_________|_________|_____________|_____________

Circuit Design
- the follwing code must be added to disable GPIO power-on default Hi-Z mode to use the ports: PM5CTL0 &= ~LOCKLPM5;
- P1.0 is the pin routed to the LED (LED1)
- Bit 0 of P1SEL, P1DIR, and P1OUT are initialized accordingly
- TBCCL0 is set to CCIE, enabling an interrupt when the value in TB0R equals the value stored in TBCCR0
- after initialization, the processor goes to into low-power mode with the following code: _BIS_SR(LPM1_bits + GIE);
- outside the main function, an interrupt vector is defined with the following code: #pragma vector=TIMER0_B0_VECTOR
- an interrupt function, which toggles P1.0 (KED1) is defined with the following code: __interrupt void TIMER0_B0(void)

***************************************************************************************************************************************
